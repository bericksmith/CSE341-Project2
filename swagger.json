{
  "openapi": "3.0.0",
  "info": {
    "title": "Project 2 API CSE 341",
    "description": "API for managing users and products",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://cse341-project2-dcl4.onrender.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://github.com/login/oauth/authorize",
            "tokenUrl": "https://github.com/login/oauth/access_token",
            "scopes": {
              "read": "Grants read access",
              "write": "Grants write access"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "tags": ["General"],
        "summary": "Project status",
        "description": "Check if the API is running",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api-docs": {
      "get": {
        "tags": ["Documentation"],
        "summary": "API documentation",
        "description": "Access API documentation",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Retrieve a list of all users",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Create a new user by providing required information",
        "security": [
          {
            "OAuth2": ["write"]
          }
        ],
        "requestBody": {
          "description": "User object that needs to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "John Doe" },
                  "email": { "type": "string", "example": "john.doe@example.com" },
                  "password": { "type": "string", "example": "password123" },
                  "role": { "type": "string", "example": "user" },
                  "status": { "type": "string", "example": "active" },
                  "dob": { "type": "string", "format": "date", "example": "1990-01-01" },
                  "location": { "type": "string", "example": "New York" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID",
        "description": "Retrieve a user by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User found"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user by ID",
        "description": "Update user information",
        "security": [
          {
            "OAuth2": ["write"]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "description": "User object with updated information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Jane Doe" },
                  "email": { "type": "string", "example": "jane.doe@example.com" },
                  "password": { "type": "string", "example": "newpassword123" },
                  "role": { "type": "string", "example": "admin" },
                  "status": { "type": "string", "example": "inactive" },
                  "dob": { "type": "string", "format": "date", "example": "1992-01-01" },
                  "location": { "type": "string", "example": "Los Angeles" }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user by ID",
        "description": "Delete a user by their ID",
        "security": [
          {
            "OAuth2": ["write"]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "description": "Retrieve a list of all products",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "description": "Create a new product by providing necessary details",
        "security": [
          {
            "OAuth2": ["write"]
          }
        ],
        "requestBody": {
          "description": "Product object that needs to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Laptop" },
                  "description": { "type": "string", "example": "High-end gaming laptop" },
                  "price": { "type": "number", "example": 1500.99 },
                  "category": { "type": "string", "example": "Electronics" },
                  "stock": { "type": "integer", "example": 100 },
                  "added": { "type": "string", "format": "date", "example": "2024-01-01" },
                  "updated": { "type": "string", "format": "date", "example": "2024-02-01" },
                  "location": { "type": "string", "example": "Warehouse 5" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by ID",
        "description": "Retrieve a product by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product found"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update product by ID",
        "description": "Update product information",
        "security": [
          {
            "OAuth2": ["write"]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "requestBody": {
          "description": "Product object with updated information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Updated Laptop" },
                  "description": { "type": "string", "example": "New specs for the laptop" },
                  "price": { "type": "number", "example": 1700.99 },
                  "category": { "type": "string", "example": "Electronics" },
                  "stock": { "type": "integer", "example": 50 },
                  "added": { "type": "string", "format": "date", "example": "2024-01-01" },
                  "updated": { "type": "string", "format": "date", "example": "2024-03-01" },
                  "location": { "type": "string", "example": "Warehouse 7" }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete product by ID",
        "description": "Delete a product by its ID",
        "security": [
          {
            "OAuth2": ["write"]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}
